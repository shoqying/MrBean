<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbean.Mapper.FinishedProductsOutgoingMapper">

    <!-- 출고 목록 조회 SQL -->
    <select id="getAllFinishedProducts" resultType="com.mrbean.finishedproductsoutgoing.FinishedProductsOutgoingVO">
        SELECT
            fo_no AS foNo,
            fpl_no AS fplNo,
            p_code AS pCode,
            fo_quantity AS foQuantity,
            fo_unit AS foUnit,
            w_code AS wCode,
            fo_date AS foDate,
            fo_shippinglocationname AS foShippingLocationName,  <!-- 출고 위치명 수정됨 -->
            fo_shippinglocation AS foShippingLocation,  <!-- 출고지 -->
            work_order_no AS workOrderNo  <!-- 작업지시 번호 추가 -->
        FROM finishedproducts_outgoing
    </select>
    
    <!-- COMPLETED 상태의 work_order_no 조회 -->
    <select id="getCompletedWorkOrderNumbers" resultType="string">
        SELECT work_order_no 
        FROM work_orders 
        WHERE work_status = 'COMPLETED'
    </select>
    
    <!-- 출고 번호로 출고 정보 조회 SQL -->
    <select id="getFinishedProductByFoNo" parameterType="String" resultType="com.mrbean.finishedproductsoutgoing.FinishedProductsOutgoingVO">
        SELECT 
            fo_no AS foNo, 
            fpl_no AS fplNo, 
            p_code AS pCode, 
            fo_quantity AS foQuantity, 
            fo_unit AS foUnit, 
            w_code AS wCode, 
            fo_date AS foDate, 
            fo_shippinglocationname AS foShippingLocationName, 
            fo_shippinglocation AS foShippingLocation,  <!-- 이 부분 뒤에 콤마 추가 -->
            work_order_no AS workOrderNo  <!-- 작업지시 번호를 추가 -->
        FROM finishedproducts_outgoing
        WHERE fo_no = #{foNo}
    </select>

    <!-- 출고 정보 등록 SQL -->
    <insert id="registerFinishedProduct" parameterType="com.mrbean.finishedproductsoutgoing.FinishedProductsOutgoingVO">
        INSERT INTO finishedproducts_outgoing
        (fo_no, fpl_no, p_code, fo_quantity, fo_unit, w_code, fo_date, fo_shippinglocationname, fo_shippinglocation, work_order_no) 
        VALUES
        (#{foNo}, #{fplNo}, #{pCode}, #{foQuantity}, #{foUnit}, #{wCode}, #{foDate}, #{foShippingLocationName}, #{foShippingLocation}, #{workOrderNo})
    </insert>

    <!-- 출고 정보 수정 SQL -->
    <update id="updateFinishedProduct" parameterType="com.mrbean.finishedproductsoutgoing.FinishedProductsOutgoingVO">
        UPDATE finishedproducts_outgoing
        SET
            fpl_no = #{fplNo},
            p_code = #{pCode},
            fo_quantity = #{foQuantity},
            fo_unit = #{foUnit},
            w_code = #{wCode},
            fo_date = #{foDate},
            fo_shippinglocationname = #{foShippingLocationName},  <!-- 출고 위치명 수정됨 -->
            fo_shippinglocation = #{foShippingLocation}  <!-- 출고지 -->
        WHERE fo_no = #{foNo}
    </update>

    <!-- 출고 정보 삭제 SQL -->
    <delete id="deleteFinishedProduct" parameterType="String">
        DELETE FROM finishedproducts_outgoing
        WHERE fo_no = #{foNo}
    </delete>

    <!-- 완제품 로트번호 목록 조회 SQL -->
    <select id="getLotNumbers" resultType="String">
        SELECT DISTINCT fpl_no
        FROM finishedproducts_outgoing
        ORDER BY fpl_no
    </select>

    <!-- 제품 코드 목록 조회 SQL -->
    <select id="getProductCodes" resultType="String">
        SELECT DISTINCT p_code
        FROM finishedproducts_outgoing
        ORDER BY p_code
    </select>

    <!-- 창고 코드 목록 조회 SQL (warehouses 테이블에서 가져오기) -->
    <select id="getWarehouseCodes" resultType="String">
        SELECT DISTINCT w_code
        FROM warehouses
        ORDER BY w_code
    </select>

</mapper>
